{"version":3,"sources":["src/pages/list/basic-list/style.style.ts","src/pages/list/basic-list/components/OperationModal.tsx","src/pages/list/basic-list/service.ts","src/pages/list/basic-list/index.tsx"],"sourcesContent":["import { createStyles } from 'antd-style';\n\nconst useStyles = createStyles(({ token }) => {\n  return {\n    standardList: {\n      '.ant-card-head': { borderBottom: 'none' },\n      '.ant-card-head-title': { padding: '24px 0', lineHeight: '32px' },\n      '.ant-card-extra': { padding: '24px 0' },\n      '.ant-list-pagination': { marginTop: '24px', textAlign: 'right' },\n      '.ant-avatar-lg': { width: '48px', height: '48px', lineHeight: '48px' },\n      [`@media screen and (max-width: ${token.screenXS}px)`]: {\n        '.ant-list-item-content': {\n          display: 'block',\n          flex: 'none',\n          width: '100%',\n        },\n        '.ant-list-item-action': {\n          marginLeft: '0',\n        },\n      },\n    },\n    headerInfo: {\n      position: 'relative',\n      textAlign: 'center',\n      '& > span': {\n        display: 'inline-block',\n        marginBottom: '4px',\n        color: token.colorTextSecondary,\n        fontSize: token.fontSize,\n        lineHeight: '22px',\n      },\n      '& > p': {\n        margin: '0',\n        color: token.colorTextHeading,\n        fontSize: '24px',\n        lineHeight: '32px',\n      },\n      '& > em': {\n        position: 'absolute',\n        top: '0',\n        right: '0',\n        width: '1px',\n        height: '56px',\n        backgroundColor: token.colorSplit,\n      },\n      [`@media screen and (max-width: ${token.screenSM}px)`]: {\n        marginBottom: '16px',\n        '& > em': {\n          display: 'none',\n        },\n      },\n    },\n    listContent: {\n      fontSize: '0',\n      [`@media screen and (max-width: ${token.screenXS}px)`]: {\n        marginLeft: '0',\n        '& > div': {\n          marginLeft: '0',\n        },\n      },\n      [`@media screen and (max-width: ${token.screenMD}px)`]: {\n        '& > div': {\n          display: 'block',\n        },\n        '& > div:last-child': {\n          top: '0',\n          width: '100%',\n        },\n      },\n      [`@media screen and (max-width: ${token.screenLG}px) and (min-width: @screen-md)`]:\n        {\n          '& > div': {\n            display: 'block',\n          },\n          '& > div:last-child': {\n            top: '0',\n            width: '100%',\n          },\n        },\n      [`@media screen and (max-width: ${token.screenXL}px)`]: {\n        '& > div': {\n          marginLeft: '24px',\n        },\n        '& > div:last-child': {\n          top: '0',\n        },\n      },\n      '@media screen and (max-width: 1400px)': {\n        textAlign: 'right',\n        '& > div:last-child': {\n          top: '0',\n        },\n      },\n    },\n    listContentItem: {\n      display: 'inline-block',\n      marginLeft: '40px',\n      color: token.colorTextSecondary,\n      fontSize: token.fontSize,\n      verticalAlign: 'middle',\n      '> span': { lineHeight: '20px' },\n      '> p': { marginTop: '4px', marginBottom: '0', lineHeight: '22px' },\n    },\n    extraContentSearch: {\n      width: '272px',\n      marginLeft: '16px',\n      [`@media screen and (max-width: ${token.screenSM}px)`]: {\n        width: '100%',\n        marginLeft: '0',\n      },\n    },\n    listCard: {\n      [`@media screen and (max-width: ${token.screenXS}px)`]: {\n        '.ant-card-head-title': {\n          overflow: 'open',\n        },\n      },\n      [`@media screen and (max-width: ${token.screenMD}px)`]: {\n        '.ant-radio-group': {\n          display: 'block',\n          marginBottom: '8px',\n        },\n      },\n    },\n    standardListForm: {\n      '.ant-form-item': {\n        marginBottom: '12px',\n        '&:last-child': {\n          marginBottom: '32px',\n          paddingTop: '4px',\n        },\n      },\n    },\n    formResult: {\n      width: '100%',\n      \"[class^='title']\": { marginBottom: '8px' },\n    },\n  };\n});\n\nexport default useStyles;\n","import {\n  ModalForm,\n  ProFormDateTimePicker,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n} from '@ant-design/pro-components';\nimport { Button, Result } from 'antd';\nimport type { FC } from 'react';\nimport type { BasicListItemDataType } from '../data.d';\nimport useStyles from '../style.style';\n\ntype OperationModalProps = {\n  done: boolean;\n  open: boolean;\n  current: Partial<BasicListItemDataType> | undefined;\n  onDone: () => void;\n  onSubmit: (values: BasicListItemDataType) => void;\n  children?: React.ReactNode;\n};\nconst OperationModal: FC<OperationModalProps> = (props) => {\n  const { styles } = useStyles();\n  const { done, open, current, onDone, onSubmit, children } = props;\n  if (!open) {\n    return null;\n  }\n  return (\n    <ModalForm<BasicListItemDataType>\n      open={open}\n      title={done ? null : `任务${current ? '编辑' : '添加'}`}\n      className={styles.standardListForm}\n      width={640}\n      onFinish={async (values) => {\n        onSubmit(values);\n      }}\n      initialValues={current}\n      submitter={{\n        render: (_, dom) => (done ? null : dom),\n      }}\n      trigger={children}\n      modalProps={{\n        onCancel: () => onDone(),\n        destroyOnClose: true,\n        bodyStyle: done\n          ? {\n              padding: '72px 0',\n            }\n          : {},\n      }}\n    >\n      {!done ? (\n        <>\n          <ProFormText\n            name=\"title\"\n            label=\"任务名称\"\n            rules={[\n              {\n                required: true,\n                message: '请输入任务名称',\n              },\n            ]}\n            placeholder=\"请输入\"\n          />\n          <ProFormDateTimePicker\n            name=\"createdAt\"\n            label=\"开始时间\"\n            rules={[\n              {\n                required: true,\n                message: '请选择开始时间',\n              },\n            ]}\n            fieldProps={{\n              style: {\n                width: '100%',\n              },\n            }}\n            placeholder=\"请选择\"\n          />\n          <ProFormSelect\n            name=\"owner\"\n            label=\"任务负责人\"\n            rules={[\n              {\n                required: true,\n                message: '请选择任务负责人',\n              },\n            ]}\n            options={[\n              {\n                label: '付晓晓',\n                value: 'xiao',\n              },\n              {\n                label: '周毛毛',\n                value: 'mao',\n              },\n            ]}\n            placeholder=\"请选择管理员\"\n          />\n          <ProFormTextArea\n            name=\"subDescription\"\n            label=\"产品描述\"\n            rules={[\n              {\n                message: '请输入至少五个字符的产品描述！',\n                min: 5,\n              },\n            ]}\n            placeholder=\"请输入至少五个字符\"\n          />\n        </>\n      ) : (\n        <Result\n          status=\"success\"\n          title=\"操作成功\"\n          subTitle=\"一系列的信息描述，很短同样也可以带标点。\"\n          extra={\n            <Button type=\"primary\" onClick={onDone}>\n              知道了\n            </Button>\n          }\n          className={styles.formResult}\n        />\n      )}\n    </ModalForm>\n  );\n};\nexport default OperationModal;\n","import { request } from '@umijs/max';\nimport type { BasicListItemDataType } from './data.d';\n\ntype ParamsType = {\n  count?: number;\n} & Partial<BasicListItemDataType>;\n\nexport async function queryFakeList(\n  params: ParamsType,\n): Promise<{ data: { list: BasicListItemDataType[] } }> {\n  return request('/api/get_list', {\n    params,\n  });\n}\n\nexport async function removeFakeList(\n  params: ParamsType,\n): Promise<{ data: { list: BasicListItemDataType[] } }> {\n  return request('/api/post_fake_list', {\n    method: 'POST',\n    data: {\n      ...params,\n      method: 'delete',\n    },\n  });\n}\n\nexport async function addFakeList(\n  params: ParamsType,\n): Promise<{ data: { list: BasicListItemDataType[] } }> {\n  return request('/api/post_fake_list', {\n    method: 'POST',\n    data: {\n      ...params,\n      method: 'post',\n    },\n  });\n}\n\nexport async function updateFakeList(\n  params: ParamsType,\n): Promise<{ data: { list: BasicListItemDataType[] } }> {\n  return request('/api/post_fake_list', {\n    method: 'POST',\n    data: {\n      ...params,\n      method: 'update',\n    },\n  });\n}\n","import { DownOutlined, PlusOutlined } from '@ant-design/icons';\nimport { PageContainer } from '@ant-design/pro-components';\nimport { useRequest } from '@umijs/max';\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Dropdown,\n  Input,\n  List,\n  Modal,\n  Progress,\n  Row,\n  Segmented,\n} from 'antd';\nimport dayjs from 'dayjs';\nimport type { FC } from 'react';\nimport React, { useState } from 'react';\nimport OperationModal from './components/OperationModal';\nimport type { BasicListItemDataType } from './data.d';\nimport {\n  addFakeList,\n  queryFakeList,\n  removeFakeList,\n  updateFakeList,\n} from './service';\nimport useStyles from './style.style';\n\nconst { Search } = Input;\nconst Info: FC<{\n  title: React.ReactNode;\n  value: React.ReactNode;\n  bordered?: boolean;\n}> = ({ title, value, bordered }) => {\n  const { styles } = useStyles();\n  return (\n    <div className={styles.headerInfo}>\n      <span>{title}</span>\n      <p>{value}</p>\n      {bordered && <em />}\n    </div>\n  );\n};\nconst ListContent = ({\n  data: { owner, createdAt, percent, status },\n}: {\n  data: BasicListItemDataType;\n}) => {\n  const { styles } = useStyles();\n  return (\n    <div>\n      <div className={styles.listContentItem}>\n        <span>Owner</span>\n        <p>{owner}</p>\n      </div>\n      <div className={styles.listContentItem}>\n        <span>开始时间</span>\n        <p>{dayjs(createdAt).format('YYYY-MM-DD HH:mm')}</p>\n      </div>\n      <div className={styles.listContentItem}>\n        <Progress\n          percent={percent}\n          status={status}\n          strokeWidth={6}\n          style={{\n            width: 180,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\nexport const BasicList: FC = () => {\n  const { styles } = useStyles();\n  const [done, setDone] = useState<boolean>(false);\n  const [open, setVisible] = useState<boolean>(false);\n  const [current, setCurrent] = useState<\n    Partial<BasicListItemDataType> | undefined\n  >(undefined);\n  const {\n    data: listData,\n    loading,\n    mutate,\n  } = useRequest(() => {\n    return queryFakeList({\n      count: 50,\n    });\n  });\n  const { run: postRun } = useRequest(\n    (method, params) => {\n      if (method === 'remove') {\n        return removeFakeList(params);\n      }\n      if (method === 'update') {\n        return updateFakeList(params);\n      }\n      return addFakeList(params);\n    },\n    {\n      manual: true,\n      onSuccess: (result) => {\n        mutate(result);\n      },\n    },\n  );\n  const list = listData?.list || [];\n  const paginationProps = {\n    showSizeChanger: true,\n    showQuickJumper: true,\n    pageSize: 5,\n    total: list.length,\n  };\n  const showEditModal = (item: BasicListItemDataType) => {\n    setVisible(true);\n    setCurrent(item);\n  };\n  const deleteItem = (id: string) => {\n    postRun('remove', {\n      id,\n    });\n  };\n  const editAndDelete = (\n    key: string | number,\n    currentItem: BasicListItemDataType,\n  ) => {\n    if (key === 'edit') showEditModal(currentItem);\n    else if (key === 'delete') {\n      Modal.confirm({\n        title: '删除任务',\n        content: '确定删除该任务吗？',\n        okText: '确认',\n        cancelText: '取消',\n        onOk: () => deleteItem(currentItem.id),\n      });\n    }\n  };\n  const extraContent = (\n    <div>\n      <Segmented\n        defaultValue=\"all\"\n        options={[\n          { label: '全部', value: 'all' },\n          { label: '进行中', value: 'progress' },\n          { label: '等待中', value: 'waiting' },\n        ]}\n        // 如有需要可添加 onChange 事件\n      />\n      <Search\n        className={styles.extraContentSearch}\n        placeholder=\"请输入\"\n        onSearch={() => ({})}\n        variant=\"filled\"\n      />\n    </div>\n  );\n  const MoreBtn: React.FC<{\n    item: BasicListItemDataType;\n  }> = ({ item }) => (\n    <Dropdown\n      menu={{\n        onClick: ({ key }) => editAndDelete(key, item),\n        items: [\n          {\n            key: 'edit',\n            label: '编辑',\n          },\n          {\n            key: 'delete',\n            label: '删除',\n          },\n        ],\n      }}\n    >\n      <a>\n        更多 <DownOutlined />\n      </a>\n    </Dropdown>\n  );\n  const handleDone = () => {\n    setDone(false);\n    setVisible(false);\n    setCurrent({});\n  };\n  const handleSubmit = (values: BasicListItemDataType) => {\n    setDone(true);\n    const method = values?.id ? 'update' : 'add';\n    postRun(method, values);\n  };\n  return (\n    <div>\n      <PageContainer>\n        <div className={styles.standardList}>\n          <Card bordered={false}>\n            <Row>\n              <Col sm={8} xs={24}>\n                <Info title=\"我的待办\" value=\"8个任务\" bordered />\n              </Col>\n              <Col sm={8} xs={24}>\n                <Info title=\"本周任务平均处理时间\" value=\"32分钟\" bordered />\n              </Col>\n              <Col sm={8} xs={24}>\n                <Info title=\"本周完成任务数\" value=\"24个任务\" />\n              </Col>\n            </Row>\n          </Card>\n\n          <Card\n            className={styles.listCard}\n            variant=\"borderless\"\n            title=\"基本列表\"\n            style={{\n              marginTop: 24,\n            }}\n            styles={{\n              body: {\n                padding: '0 32px 40px 32px',\n              },\n            }}\n            extra={extraContent}\n          >\n            <List\n              size=\"large\"\n              rowKey=\"id\"\n              loading={loading}\n              pagination={paginationProps}\n              dataSource={list}\n              renderItem={(item) => (\n                <List.Item\n                  actions={[\n                    <a\n                      key=\"edit\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        showEditModal(item);\n                      }}\n                    >\n                      编辑\n                    </a>,\n                    <MoreBtn key=\"more\" item={item} />,\n                  ]}\n                >\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar src={item.logo} shape=\"square\" size=\"large\" />\n                    }\n                    title={<a href={item.href}>{item.title}</a>}\n                    description={item.subDescription}\n                  />\n                  <ListContent data={item} />\n                </List.Item>\n              )}\n            />\n          </Card>\n        </div>\n      </PageContainer>\n      <Button\n        type=\"dashed\"\n        onClick={() => {\n          setVisible(true);\n        }}\n        style={{\n          width: '100%',\n          marginBottom: 8,\n        }}\n      >\n        <PlusOutlined />\n        添加\n      </Button>\n      <OperationModal\n        done={done}\n        open={open}\n        current={current}\n        onDone={handleDone}\n        onSubmit={handleSubmit}\n      />\n    </div>\n  );\n};\nexport default BasicList;\n"],"names":[],"mappings":"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"}